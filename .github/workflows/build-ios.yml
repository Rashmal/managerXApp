name: Build & Sign iOS App

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Install npm dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 4. Patch PrimeNG for Angular 20 (if needed)
      - name: Patch PrimeNG
        run: |
          sed -i '' 's/, InjectFlags//' node_modules/primeng/dynamicdialog/dynamicdialog-injector.d.ts
          sed -i '' 's/| InjectFlags//g' node_modules/primeng/dynamicdialog/dynamicdialog-injector.d.ts

      # 5. Build Ionic project for iOS
      - name: Build Ionic iOS
        run: |
          npm run build
          npx cap sync ios

      # 6. Decode and install .p12 certificate
      - name: Decode .p12 certificate
        run: |
          echo "${{ secrets.IOS_P12_BASE64 }}" | base64 --decode > ios_distribution.p12
          security create-keychain -p "" build.keychain
          security import ios_distribution.p12 -k ~/Library/Keychains/build.keychain -P "${{ secrets.IOS_P12_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain

      # 7. Install provisioning profile
      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_MOBILEPROVISION_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      # 8. Build and archive with Xcode
      - name: Build with Xcode
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme "${{ secrets.APP_SCHEME }}" -sdk iphoneos -configuration Release archive -archivePath $PWD/build/App.xcarchive

      # 9. Export IPA
      - name: Export IPA
        run: |
          xcodebuild -exportArchive -archivePath ios/App/build/App.xcarchive -exportOptionsPlist ios/App/exportOptions.plist -exportPath output

      # 10. Upload artifact (IPA file)
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: iOS-IPA
          path: output/*.ipa
