name: Build & Sign iOS App

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Patch PrimeNG
        run: |
          sed -i '' 's/, InjectFlags//' node_modules/primeng/dynamicdialog/dynamicdialog-injector.d.ts || true
          sed -i '' 's/| InjectFlags//g' node_modules/primeng/dynamicdialog/dynamicdialog-injector.d.ts || true

      - name: Build Ionic & sync iOS
        run: |
          npm run build
          npx cap sync ios

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          cd ios/App
          pod repo update
          pod install --verbose

      - name: Detect workspace
        run: |
          WORKSPACE=$(find ios/App -maxdepth 1 -name "*.xcworkspace" -type d | head -n 1)
          if [ -z "$WORKSPACE" ]; then
            echo "Error: .xcworkspace not found"
            exit 1
          fi
          echo "Workspace detected: $WORKSPACE"
          echo "WORKSPACE=$WORKSPACE" >> $GITHUB_ENV

      - name: Setup Ruby & Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane -v 2.228.0

      - name: Setup iOS Signing
        run: |
          # Import .p12 certificate
          echo "${IOS_P12_BASE64}" | base64 --decode > ios_cert.p12
          security create-keychain -p "" build.keychain
          security import ios_cert.p12 -k ~/Library/Keychains/build.keychain -P "${IOS_P12_PASSWORD}" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain

          # Install provisioning profile
          echo "${IOS_MOBILEPROVISION_BASE64}" | base64 --decode > ios_profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          IOS_P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
          IOS_P12_BASE64: ${{ secrets.IOS_P12_BASE64 }}
          IOS_MOBILEPROVISION_BASE64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}

      - name: Setup App Store Connect API Key
        run: |
          echo "${APP_STORE_CONNECT_API_KEY_BASE64}" | base64 --decode > AuthKey.p8
        env:
          APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}

      - name: Build & Sign iOS App
        run: |
          mkdir -p build/ios
          fastlane run build_ios_app \
            workspace:"ios/App/App.xcworkspace" \
            scheme:"App" \
            export_method:"app-store" \
            output_directory:"build/ios" \
            xcargs:"DEVELOPMENT_TEAM=NPXC63W394" \
            export_options:"provisioningProfiles={\"com.managerxpro\":\"ios_profile.mobileprovision\"}"

      - name: Upload IPA to App Store Connect
        run: |
          fastlane pilot upload \
            ipa:"build/ios/App.ipa" \
            skip_submission:true \
            api_key_path:"AuthKey.p8"

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-IPA
          path: build/ios/*.ipa
